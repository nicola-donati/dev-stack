version: '3.2'

services:

  portainer:
    container_name: portainer
    image: portainer/portainer-ce
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer-data:/data
    restart: unless-stopped
    environment:
      VIRTUAL_HOST: portainer.local
      VIRTUAL_PORT: 9000
  
  postgres:
    container_name: postgres
    image: postgres:16.3
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./default/postgres/multiple-databases.sh:/docker-entrypoint-initdb.d/multiple-databases.sh
      - ./default/postgres:/docker-entrypoint-initdb.d
    environment:
      POSTGRES_USER: dev-stack-admin
      POSTGRES_PASSWORD: 123DevStack!
      POSTGRES_DB: main
      PGDATA: /var/lib/postgresql/data/db-files/
      POSTGRES_MULTIPLE_DATABASES: wiki-db,synapse-matrix-db
      POSTGRES_INITDB_ARGS: --encoding=UTF-8 --lc-collate=C --lc-ctype=C
      NETWORK_ACCESS: internal
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U 'dev-stack-admin' -d 'main'"]
      interval: 5s
      timeout: 5s
      retries: 5

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4:8.8
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@devstack.it
      PGADMIN_DEFAULT_PASSWORD: 123DevStack!
      VIRTUAL_HOST: pgadmin.local
      VIRTUAL_PORT: 80
    volumes:
       - pgadmin-data:/var/lib/pgadmin
        - ./default/pgadmin/servers.json:/pgadmin4/servers.json # preconfigured servers/connections
    restart: unless-stopped
    
  wiki:
    container_name: wiki
    image: requarks/wiki:2.5
    environment:
      DB_TYPE: postgres
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USER: dev-stack-admin
      DB_PASS: 123DevStack!
      DB_NAME: wiki-db
      VIRTUAL_HOST: wiki.local
      VIRTUAL_PORT: 3000
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy

  nexus:
    container_name: artifactshub
    image: sonatype/nexus3
    restart: unless-stopped
    volumes:
      - nexus-data:/nexus-data
    environment:
      VIRTUAL_HOST: artifactshub.local
      VIRTUAL_PORT: 8081

  jenkins:
    container_name: jenkins
    image: jenkins/jenkins:lts-jdk17
    restart: unless-stopped
    volumes:
      - jenkins-docker-certs:/certs/client
      - jenkins-data:/var/jenkins_home
    environment:
      VIRTUAL_HOST: jenkins.local
      VIRTUAL_PORT: 8080

  synapse-matrix:
    image: "matrixdotorg/synapse:v1.90.0"
    container_name: synapse-matrix
    volumes:
        - synapse-matrix-data:/data #it will look at the current directory where you save the file and look for the data folder inside
        - ./default/synapse-matrix-data/:/data/
    environment:
        VIRTUAL_HOST: "matrix.local"
        VIRTUAL_PORT: 8008
        LETSENCRYPT_HOST: "matrix.local"
        SYNAPSE_SERVER_NAME: "matrix.local"
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy

  nginx:
    image: jwilder/nginx-proxy
    container_name: nginx-proxy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro

networks:
  dev_network:

volumes:
  portainer-data:
  postgres-data:
  pgadmin-data:
  nexus-data:
  jenkins-docker-certs:
  jenkins-data:
  synapse-matrix-data: